Tipos de datos definidos:
displayConnection_t: Enumeración que define el tipo de conexión del display
display_t: Estructura que indica el tipo de conexión.

Variables globales:
DigitalOut displayD4, displayD5, displayD6, displayD7, displayRs, displayEn: Controlan los pines de datos y control del display.
static display_t display: Variable global que almacena la configuración del display.
static bool initial8BitCommunicationIsCompleted: si se completó la inicialización en modo 8 bits.

Funciones:
void displayInit(displayConnection_t connection): Inicializa el display según el tipo de conexión.
void displayCharPositionWrite(uint8_t charPositionX, uint8_t charPositionY): Posiciona el cursor en la coordenada X, Y del display 20x4.
void displayStringWrite(const char* str): Escribe una cadena de caracteres en el display desde la posición actual.
static void displayCodeWrite(bool type, uint8_t dataBus): Envía un comando o dato al display, dependiendo del parámetro 'type'.
static void displayDataBusWrite(uint8_t dataByte):Escribe un byte en el bus de datos del display, manejando el modo 4 o 8 bits.
static void displayPinWrite(uint8_t pinName, int value): Asigna el valor a un pin específico según la conexión (4 u 8 bits).

Estructura
Uso de estructuras switch para manejar el tipo de conexión y seleccionar líneas del display.
Lógica jerárquica: displayInit() llama a displayCodeWrite(), que llama a displayDataBusWrite(), que a su vez utiliza displayPinWrite().
